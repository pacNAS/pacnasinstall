#!/usr/bin/bash

## Check if running as sudo/root ##
if [ $EUID != 0 ] ; then
  echo "Must sudo or be root.  Terminating..." >&2
  exit 1
fi

autoprepare_format() {
  local PART_ROOT=$1
  local ROTATIONAL=$2
  local LOG=$3

  local BTRFS_ROOT=/mnt/pacnas_root

  echo "make btrfs on pacnas_root"
  # we are forcing it, since parted seems to create an ext2 file system automatically
  mkfs.btrfs -L pacnas_root -f ${PART_ROOT} >>/tmp/debug.log #${LOG}

  mkdir -p ${BTRFS_ROOT} >>/tmp/debug.log #${LOG}
  # make sure, this is really an ssd
  MOUNT_OPTIONS="defaults,noatime,compress=lzo"
  if [ "$ROTATIONAL" = "0" ]; then
    MOUNT_OPTIONS=$MOUNT_OPTIONS,ssd
  fi

  echo "mounting ${PART_ROOT} with ${MOUNT_OPTIONS}" >>/tmp/debug.log #${LOG}
  mount -o ${MOUNT_OPTIONS} ${PART_ROOT} /mnt/pacnas_root >>/tmp/debug.log #${LOG}

  # enable rollback functionality (this will be the new root directory)
  cd ${BTRFS_ROOT}
  btrfs subvolume snapshot . __active

  cd ${BTRFS_ROOT}/__active
  btrfs subvolume create home >>/tmp/debug.log #${LOG}
  btrfs subvolume create var >>/tmp/debug.log #${LOG}
  btrfs subvolume create opt >>/tmp/debug.log #${LOG}
  # make it snapper compatible
  btrfs subvolume create .snapshot >> /tmp/debug.log #${LOG}

  chmod 755  ../\__active home var opt

  # determine root subvolid (needed for mounting correctly with mkinitcpio-btrfs)
  subvolid=$(btrfs subvolume list . | /usr/bin/awk '/__active/ {print $2}')
  echo "SubvolID: $subvolid" >> /tmp/debug.log
  btrfs subvolume set-default $subvolid .

  # enable snapshot functionality
  cd ${BTRFS_ROOT}
  ln -s ${BTRFS_ROOT}/__active/.snapshots __snapshot >>/tmp/debug.log #${LOG}

  mkdir -p /mnt/pacnas_active >>/tmp/debug.log
  cd /mnt
  umount /mnt/pacnas_root >>/tmp/debug.log

  # need to provide info, if the disc is an ssd, we are booting default subvolume here (__active)
  mount -o ${MOUNT_OPTIONS} ${PART_ROOT} /mnt/pacnas_active >>/tmp/debug.log
}

# vim: set ts=2 sw=2 et: